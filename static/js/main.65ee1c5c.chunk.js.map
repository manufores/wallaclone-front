{"version":3,"sources":["context/alertas/alertaContext.js","context/autenticacion/authContext.js","components/auth/Login.js","components/auth/NuevaCuenta.js","components/auth/ResetPass.js","components/auth/PassReseted.js","context/anuncios/anuncioContext.js","components/anuncios/NuevoAnuncio.js","components/layout/Sidebar.js","components/layout/Barra.js","components/anuncios/FormAnuncio.js","components/anuncios/Anuncio.js","components/anuncios/ListadoAnuncios.js","components/anuncios/Anuncios.js","context/busqueda/busquedaContext.js","i18n.js","components/layout/BarraLayoutPrincipal.js","components/anuncios/FormBusqueda.js","components/anuncios/ListadoAnunciosAll.js","context/anuncios/anuncioReducer.js","types/index.js","config/axios.js","context/anuncios/anuncioState.js","context/alertas/alertaReducer.js","context/alertas/alertaState.js","context/autenticacion/authReducer.js","config/token.js","context/autenticacion/authState.js","components/rutas/RutaPrivada.js","context/busqueda/busquedaReducer.js","context/busqueda/busquedaState.js","App.js","serviceWorker.js","index.js"],"names":["alertaContext","createContext","authContext","Login","props","useContext","AlertaContext","alerta","mostrarAlerta","AuthContext","mensaje","autenticado","iniciarSesion","useEffect","history","push","msg","categoria","useState","email","password","usuario","guardarUsuario","onChange","e","target","name","value","className","onSubmit","preventDefault","trim","htmlFor","type","id","placeholder","to","NuevaCuenta","registrarUsuario","nombre","confirmar","length","ResetPass","emailsended","resetearPass","solicitudReset","NuevoPass","newPassword","resetpass","token","match","params","anuncioContext","NuevoAnuncio","anunciosContext","tags","formulario","errorformulario","mostrarFormulario","agregarAnuncio","mostrarError","obtenerTags","descripcion","precio","venta","tagsP","anuncio","guardarAnuncio","image","setFile","filename","setFilename","onChangeAnuncio","onSubmitAnuncio","a","fd","FormData","append","onClick","find","element","map","tag","tagName","key","files","Sidebar","Barra","usuarioAutenticado","cerrarSesion","FormAnuncio","anuncioseleccionado","actualizarAnuncio","formedit","cerrarFormularioEdit","multiple","filter","Anuncio","src","foto","process","alt","ListadoAnuncios","anuncios","obtenerAnuncios","eliminarAnuncio","anuncioSelected","mostrarFormularioEdit","TransitionGroup","CSSTransition","_id","timeout","classNames","seleccionarAnuncio","Anuncios","busquedaContext","i18n","use","LanguageDetector","init","fallbackLng","debug","interpolation","escapeValue","react","wait","bindI18n","bindStore","nsMode","resources","en","translation","common_en","es","common_es","BarraLayoutPrincipal","busquedasContext","mostrarFormularioBusqueda","cerrarFormularioBusqueda","formulario_busqueda","href","t","FormBusqueda","obtenerBusqueda","tagsB","busqueda","guardarBusqueda","console","log","obtenerAnunciosAll","anunciosbuscados","state","action","payload","formanuncio","clienteAxios","axios","create","baseURL","AnuncioState","useReducer","anuncioReducer","formData","dispatch","get","resultado","data","post","headers","put","anuncioId","delete","Provider","anuncioActual","children","AlertaState","alertaReducer","setTimeout","localStorage","setItem","cargando","removeItem","tokenAuth","defaults","common","AuthState","initialState","getItem","AuthReducer","datos","respuesta","response","RutaPrivada","Component","component","render","url_search","BusquedaState","busquedaReducer","urlsearch","endPoint","App","exact","path","ListadoAnunciosAll","PassReseted","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.65ee1c5c.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst alertaContext = createContext();\n\nexport default alertaContext;","import { createContext } from 'react';\n\nconst authContext = createContext();\n\nexport default authContext;","import React, { useState, useContext, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport AlertaContext from '../../context/alertas/alertaContext';\nimport AuthContext from '../../context/autenticacion/authContext';\n\nconst Login = (props) => {\n\n    // extraer los valores del context\n    const alertaContext = useContext(AlertaContext);\n    const { alerta, mostrarAlerta } = alertaContext;\n\n    const authContext = useContext(AuthContext);\n    const { mensaje, autenticado, iniciarSesion } = authContext;\n\n      // En caso de que el password o usuario no exista\n      useEffect(() => {\n        if(autenticado) {\n            props.history.push('/anuncios');\n        }\n\n        if(mensaje) {\n            mostrarAlerta(mensaje.msg, mensaje.categoria);\n        }\n        // eslint-disable-next-line\n    }, [mensaje, autenticado, props.history]);\n\n    // State para iniciar sesión\n    const [usuario, guardarUsuario] = useState({\n        email: '',\n        password: ''\n    });\n\n    // extraer de usuario\n    const { email, password } = usuario;\n\n    const onChange = e => {\n        guardarUsuario({\n            ...usuario,\n            [e.target.name] : e.target.value\n        })\n    }\n\n    // Cuando el usuario quiere iniciar sesión\n    const onSubmit = e => {\n        e.preventDefault();\n\n        // Validar que no haya campos vacios\n        if(email.trim() === '' || password.trim() === '') {\n            mostrarAlerta('Todos los campos son obligatorios', 'alerta-error');\n        }\n\n        // Pasarlo al action\n        iniciarSesion({ email, password });\n    }\n\n\n\n    return ( \n        <div className=\"form-usuario\">\n            { alerta ? ( <div className={`alerta ${alerta.categoria}`}> {alerta.msg} </div> )  : null }\n\n            <div className=\"contenedor-form sombra-dark\">\n                <h1>Iniciar Sesión</h1>\n\n                <form\n                    onSubmit={onSubmit}\n                >\n                    <div className=\"campo-form\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input \n                            type=\"email\"\n                            id=\"email\"\n                            name=\"email\"\n                            placeholder=\"Tu Email\"\n                            value={email}\n                            onChange={onChange}\n                        />\n                    </div>\n\n                    <div className=\"campo-form\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input \n                            type=\"password\"\n                            id=\"password\"\n                            name=\"password\"\n                            placeholder=\"Tu Password\"\n                            value={password}\n                            onChange={onChange}\n                        />\n                    </div>\n\n                    <div className=\"campo-form\">\n                        <input type=\"submit\" className=\"btn btn-primario btn-block\" value=\"Iniciar Sesión\" />\n                    </div>\n                </form>\n\n                <Link to={'/nueva-cuenta'} className=\"enlace-cuenta\">\n                    Obtener Cuenta\n                </Link>\n                <Link to={'/reset-pass'} className=\"enlace-cuenta\">\n                    Resetear Passaword\n                </Link>\n                <Link to={'/'} className=\"enlace-cuenta\">\n                    Ir a Inicio\n                </Link>\n            </div>\n        </div>\n     );\n}\n \nexport default Login;","import React, { useState, useContext, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport AlertaContext from '../../context/alertas/alertaContext';\nimport AuthContext from '../../context/autenticacion/authContext';\n\nconst NuevaCuenta = (props) => {\n\n    // extraer los valores del context\n    const alertaContext = useContext(AlertaContext);\n    const { alerta, mostrarAlerta } = alertaContext;\n\n    const authContext = useContext(AuthContext);\n    const { mensaje, autenticado,  registrarUsuario } = authContext;\n\n    // En caso de que el usuario se haya autenticado o registrado o sea un registro duplicado\n    useEffect(() => {\n        if(autenticado) {\n            props.history.push('/anuncios');\n        }\n\n        if(mensaje) {\n            mostrarAlerta(mensaje.msg, mensaje.categoria);\n        }\n        // eslint-disable-next-line\n    }, [mensaje, autenticado, props.history]);\n\n    // State para iniciar sesión\n    const [usuario, guardarUsuario] = useState({\n        nombre: '',\n        email: '',\n        password: '',\n        confirmar: ''\n    });\n\n    // extraer de usuario\n    const { nombre, email, password, confirmar } = usuario;\n\n    const onChange = e => {\n        guardarUsuario({\n            ...usuario,\n            [e.target.name] : e.target.value\n        })\n    }\n\n    // Cuando el usuario quiere iniciar sesión\n    const onSubmit = e => {\n        e.preventDefault();\n\n        // Validar que no haya campos vacios\n        if( nombre.trim() === '' || \n            email.trim() === '' || \n            password.trim() === '' || \n            confirmar.trim() === '' ) {\n                mostrarAlerta('Todos los campos son obligatorios', 'alerta-error');\n                return;\n            }\n\n        // Password minimo de 6 caracteres\n        if(password.length < 6) {\n            mostrarAlerta('El password debe ser de al menos 6 caracteres', 'alerta-error');\n            return;\n        }\n\n        // Los 2 passwords son iguales\n        if(password !== confirmar) {\n            mostrarAlerta('Los passwords no son iguales', 'alerta-error');\n            return;\n        }\n\n        // Pasarlo al action\n        registrarUsuario({\n            nombre, \n            email, \n            password\n        });\n    }\n\n\n\n    return ( \n        <div className=\"form-usuario\">\n            { alerta ? ( <div className={`alerta ${alerta.categoria}`}> {alerta.msg} </div> )  : null }\n            <div className=\"contenedor-form sombra-dark\">\n                <h1>Obtener una cuenta</h1>\n\n                <form\n                    onSubmit={onSubmit}\n                >\n                    <div className=\"campo-form\">\n                        <label htmlFor=\"nombre\">Nombre</label>\n                        <input \n                            type=\"text\"\n                            id=\"nombre\"\n                            name=\"nombre\"\n                            placeholder=\"Tu Nombre\"\n                            value={nombre}\n                            onChange={onChange}\n                        />\n                    </div>\n\n                    <div className=\"campo-form\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input \n                            type=\"email\"\n                            id=\"email\"\n                            name=\"email\"\n                            placeholder=\"Tu Email\"\n                            value={email}\n                            onChange={onChange}\n                        />\n                    </div>\n\n                    <div className=\"campo-form\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input \n                            type=\"password\"\n                            id=\"password\"\n                            name=\"password\"\n                            placeholder=\"Tu Password\"\n                            value={password}\n                            onChange={onChange}\n                        />\n                    </div>\n\n                    <div className=\"campo-form\">\n                        <label htmlFor=\"confirmar\">Confirmar Password</label>\n                        <input \n                            type=\"password\"\n                            id=\"confirmar\"\n                            name=\"confirmar\"\n                            placeholder=\"Repite tu Password\"\n                            value={confirmar}\n                            onChange={onChange}\n                        />\n                    </div>\n\n                    <div className=\"campo-form\">\n                        <input type=\"submit\" className=\"btn btn-primario btn-block\" value=\"Registrarme\" />\n                    </div>\n                </form>\n\n                <Link to={'/'} className=\"enlace-cuenta\">\n                    Volver a Iniciar Sesión\n                </Link>\n            </div>\n        </div>\n     );\n}\n \nexport default NuevaCuenta;","import React, { useState, useContext, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport AlertaContext from '../../context/alertas/alertaContext';\r\nimport AuthContext from '../../context/autenticacion/authContext';\r\n\r\nconst ResetPass = (props) => {\r\n\r\n    // extraer los valores del context\r\n    const alertaContext = useContext(AlertaContext);\r\n    const { alerta, mostrarAlerta } = alertaContext;\r\n\r\n    const authContext = useContext(AuthContext);\r\n    const { mensaje, emailsended, resetearPass, solicitudReset } = authContext;\r\n\r\n      // En caso de que el password o usuario no exista\r\n      useEffect(() => {\r\n        if(emailsended) {\r\n            props.history.push('/login');\r\n            solicitudReset();\r\n\r\n        }\r\n\r\n        if(mensaje) {\r\n            mostrarAlerta(mensaje.msg, mensaje.categoria);\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [mensaje, emailsended, props.history]);\r\n\r\n    // State para iniciar sesión\r\n    const [usuario, guardarUsuario] = useState({\r\n        email: '',\r\n    });\r\n\r\n    // extraer de usuario\r\n    const { email } = usuario;\r\n\r\n    const onChange = e => {\r\n        guardarUsuario({\r\n            ...usuario,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    // Cuando el usuario quiere iniciar sesión\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        // Validar que no haya campos vacios\r\n        if(email.trim() === '') {\r\n            mostrarAlerta('Todos los campos son obligatorios', 'alerta-error');\r\n        }\r\n\r\n        // Pasarlo al action\r\n        resetearPass({ email });\r\n    }\r\n\r\n\r\n\r\n    return ( \r\n        <div className=\"form-usuario\">\r\n            { alerta ? ( <div className={`alerta ${alerta.categoria}`}> {alerta.msg} </div> )  : null }\r\n\r\n            <div className=\"contenedor-form sombra-dark\">\r\n                <h1>Resetear el Password</h1>\r\n\r\n                <form\r\n                    onSubmit={onSubmit}\r\n                >\r\n                    <div className=\"campo-form\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input \r\n                            type=\"email\"\r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            placeholder=\"Tu Email\"\r\n                            value={email}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"campo-form\">\r\n                        <input type=\"submit\" className=\"btn btn-primario btn-block\" value=\"Enviar\" />\r\n                    </div>\r\n                </form>\r\n\r\n                <Link to={'/login'} className=\"enlace-cuenta\">\r\n                    Login\r\n                </Link>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default ResetPass;","import React, { useState, useContext, useEffect } from 'react';\r\nimport AlertaContext from '../../context/alertas/alertaContext';\r\nimport AuthContext from '../../context/autenticacion/authContext';\r\n\r\nconst NuevoPass= (props) => {\r\n\r\n    // extraer los valores del context\r\n    const alertaContext = useContext(AlertaContext);\r\n    const { alerta, mostrarAlerta } = alertaContext;\r\n\r\n    const authContext = useContext(AuthContext);\r\n    const { mensaje, autenticado,  newPassword, resetpass } = authContext;\r\n\r\n    const token = props.match.params.token;\r\n\r\n    // En caso de que el usuario se haya autenticado o registrado o sea un registro duplicado\r\n    useEffect(() => {\r\n        if(resetpass){\r\n            props.history.push('/login');\r\n        }\r\n        if(autenticado) {\r\n            props.history.push('/anuncios');\r\n        }\r\n\r\n        if(mensaje) {\r\n            mostrarAlerta(mensaje.msg, mensaje.categoria);\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [resetpass, mensaje, autenticado, props.history]);\r\n\r\n    // State para iniciar sesión\r\n    const [usuario, guardarUsuario] = useState({\r\n        password: '',\r\n        confirmar: ''\r\n    });\r\n\r\n    // extraer de usuario\r\n    const { password, confirmar } = usuario;\r\n\r\n    const onChange = e => {\r\n        guardarUsuario({\r\n            ...usuario,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    // Cuando el usuario quiere iniciar sesión\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        // Validar que no haya campos vacios\r\n        if( password.trim() === '' || \r\n            confirmar.trim() === '' ) {\r\n                mostrarAlerta('Todos los campos son obligatorios', 'alerta-error');\r\n                return;\r\n            }\r\n\r\n        // Password minimo de 6 caracteres\r\n        if(password.length < 6) {\r\n            mostrarAlerta('El password debe ser de al menos 6 caracteres', 'alerta-error');\r\n            return;\r\n        }\r\n\r\n        // Los 2 passwords son iguales\r\n        if(password !== confirmar) {\r\n            mostrarAlerta('Los passwords no son iguales', 'alerta-error');\r\n            return;\r\n        }\r\n\r\n        // Pasarlo al action\r\n        newPassword({\r\n            token,\r\n            password\r\n        });\r\n    }\r\n\r\n\r\n\r\n    return ( \r\n        <div className=\"form-usuario\">\r\n            { alerta ? ( <div className={`alerta ${alerta.categoria}`}> {alerta.msg} </div> )  : null }\r\n            <div className=\"contenedor-form sombra-dark\">\r\n                <h1>Resetear Password</h1>\r\n\r\n                <form\r\n                    onSubmit={onSubmit}\r\n                >\r\n                    <div className=\"campo-form\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input \r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            name=\"password\"\r\n                            placeholder=\"Tu Password\"\r\n                            value={password}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"campo-form\">\r\n                        <label htmlFor=\"confirmar\">Confirmar Password</label>\r\n                        <input \r\n                            type=\"password\"\r\n                            id=\"confirmar\"\r\n                            name=\"confirmar\"\r\n                            placeholder=\"Repite tu Password\"\r\n                            value={confirmar}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"campo-form\">\r\n                        <input type=\"submit\" className=\"btn btn-primario btn-block\" value=\"Cambiar Password\" />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default NuevoPass;","import { createContext } from 'react';\n\nconst anuncioContext = createContext();\n\nexport default anuncioContext;","import React, { Fragment, useState, useContext, useEffect } from 'react';\nimport anuncioContext from '../../context/anuncios/anuncioContext';\nimport AlertaContext from '../../context/alertas/alertaContext';\n\nconst NuevoAnuncio = () => {\n\n    // Obtener el state del formulario\n    const anunciosContext = useContext(anuncioContext);\n    const { mensaje, tags, formulario, errorformulario,  mostrarFormulario, agregarAnuncio, mostrarError, obtenerTags } = anunciosContext;\n\n    const alertaContext = useContext(AlertaContext);\n    const { alerta, mostrarAlerta } = alertaContext;\n\n\n    // Obtener anuncios cuando carga el componente\n    useEffect(() => {\n        // si hay un error\n        if(mensaje) {\n            mostrarAlerta(mensaje.msg, mensaje.categoria);\n        }\n\n        obtenerTags();\n        // eslint-disable-next-line\n    }, [mensaje]);\n\n\n    // State para Anuncio\n    const [anuncio, guardarAnuncio] = useState({\n        nombre: '',\n        descripcion:'',\n        precio: 0,\n        venta: true,\n        tagsP: []\n        \n    });\n\n    const [image, setFile] = useState('');\n    const [filename, setFilename] = useState('');\n\n    // Extraer atributos de anuncio\n    const { nombre, descripcion, precio, venta, tagsP } = anuncio;\n\n\n    // Lee los contenidos del input\n    const onChangeAnuncio = e => {\n        guardarAnuncio({\n            ...anuncio,\n            [e.target.name] : e.target.value,\n        })\n    }\n\n    const onChangeTags = e => {\n        if (anuncio.tagsP.find(element => element === e.target.value)){\n            return anuncio;\n        }else{\n            guardarAnuncio({\n                ...anuncio,\n                [e.target.name] : [...anuncio.tagsP, e.target.value]\n            })\n        }\n    }\n\n    const onChangeVenta = e => {\n        if (e.target.value !== \"sell\"){\n            guardarAnuncio({\n                ...anuncio,\n                [e.target.name] : false,\n            })\n        }else{\n            guardarAnuncio({\n                ...anuncio,\n                [e.target.name] : true,\n            })\n        };        \n    }\n\n    // Cuando el usuario envia un anuncio\n    const onSubmitAnuncio = async e => {\n        e.preventDefault();\n\n        const fd =  new FormData();\n        fd.append('image', image);\n        fd.append('nombre', nombre);\n        fd.append('precio', precio);\n        fd.append('descripcion', descripcion);\n        fd.append('venta', venta)\n        fd.append('tags', tagsP);\n\n        // Validar el anuncio\n        if(nombre === '') {\n            mostrarError();\n            return;\n        }\n\n        // agregar al state\n        await agregarAnuncio(fd);\n        \n\n        \n        // Reiniciar el form\n        guardarAnuncio({\n            nombre: '',\n            descripcion:'',\n            precio: 0,\n            venta: true,\n            tagsP: []\n        })\n        setFilename('');\n    }\n\n    // Mostrar el formulario\n    const onClickFormulario = () => {\n        mostrarFormulario();\n    }\n\n    //Handler para subir imagenes al back-end\n    const fileSlectedHandler = e =>{\n        setFile(e.target.files[0]);\n        setFilename(e.target.files[0].name) ;\n    }\n\n    \n\n    return ( \n        <Fragment>\n            <button \n                type=\"button\"\n                className=\"btn btn-block btn-primario\"\n                onClick={ onClickFormulario }\n            >Nuevo Anuncio</button>\n\n            { formulario ? \n                    (\n                        <form\n                            className=\"formulario-nuevo-proyecto\"\n                            onSubmit={onSubmitAnuncio}\n                        >\n                            <input \n                                type=\"text\"\n                                className=\"input-text\"\n                                placeholder=\"Título del anuncio\"\n                                name=\"nombre\"\n                                value={nombre}\n                                onChange={onChangeAnuncio}\n                            />\n                            <textarea \n                                type=\"text\"\n                                className=\"input-text\"\n                                placeholder=\"Describe el anuncio\"\n                                name=\"descripcion\"\n                                value={descripcion}\n                                onChange={onChangeAnuncio}\n                            />\n\n                                <input \n                                    type=\"text\"\n                                    className=\"input-text\"\n                                    placeholder=\"Precio\"\n                                    name=\"precio\"\n                                    value={precio}\n                                    onChange={onChangeAnuncio}\n                            />\n\n                            <div className=\"form-group\">\n                                <label htmlFor=\"buyOrSell\">¿Vendes o compras?</label>\n                                <select name=\"venta\" className=\"form-control\" id=\"buyOrSell\" onChange={onChangeVenta}>\n                                    <option value=\"sell\" >Venta</option>\n                                    <option value=\"buy\" >Compra</option>\n                                </select>\n                            </div>\n\n                            { alerta   ? ( <div className={`alerta ${alerta.categoria} `}>{alerta.msg}</div>  ) : null  }\n\n                            <div className=\"form-group\">\n                                <label htmlFor=\"tagsList\">Selecciona tags</label>\n                                <select name=\"tagsP\" className=\"form-control\" id=\"tagsList\" onChange={onChangeTags}>\n                                    <option>Escoge un tag</option>\n                                    {(tags.map(tag => (<option  value={tag.tagName} key={tag.tagName} >{tag.tagName}</option>)))}\n                                </select>\n                            </div>\n\n                            <div className=\"custom-file\">\n                                <input type=\"file\"\n                                    className='custom-file-input'\n                                    id='customFile'\n                                    onChange={fileSlectedHandler} />\n                                    <label className='custom-file-label' htmlFor='customFile'>\n                                        {filename}\n                                    </label>\n                                </div>                         \n\n                            <input \n                                type=\"submit\"\n                                className=\"btn btn-primario btn-block\"\n                                value=\"Agregar Anuncio\"\n                            />\n\n                        </form>\n                ) : null }\n\n            { errorformulario ? <p className=\"mensaje error\">El nombre del Anuncio es obligatorio</p>  : null }\n        </Fragment>\n     );\n}\n \nexport default NuevoAnuncio;","import React from 'react';\nimport NuevoAnuncio from '../anuncios/NuevoAnuncio';\n\n\nconst Sidebar = () => {\n    return ( \n        <aside>\n            <h1>Walla<span>Clone</span></h1>\n\n            <NuevoAnuncio />\n\n            {/* <div className=\"proyectos\">\n                <h2>Tus Proyectos</h2>\n                <ListadoProyectos />\n            </div> */}\n        </aside>\n     );\n}\n \nexport default Sidebar;","import React, {useContext, useEffect} from 'react';\nimport AuthContext from '../../context/autenticacion/authContext';\n\n\nconst Barra = () => {\n\n    // Extraer la información de autenticación\n    const authContext = useContext(AuthContext);\n    const { usuario, usuarioAutenticado, cerrarSesion  } = authContext;\n\n    useEffect(() => {\n        usuarioAutenticado();\n        // eslint-disable-next-line\n    }, []);\n\n\n\n    return ( \n        <header className=\"app-header\">\n            {usuario ? <p className=\"nombre-usuario\">Hola <span>{usuario.nombre} </span> </p> : null}\n            \n\n            <nav className=\"nav-principal\">\n                <button \n                    className=\"btn btn-blank cerrar-sesion\"\n                    onClick={() => cerrarSesion() }\n                >Cerrar Sesión</button>\n            </nav>\n        </header>\n     );\n}\n \nexport default Barra;","import React, { Fragment, useState, useContext, useEffect } from 'react';\r\nimport anuncioContext from '../../context/anuncios/anuncioContext';\r\nimport AlertaContext from '../../context/alertas/alertaContext';\r\n\r\nconst FormAnuncio = () => {\r\n\r\n    // Obtener el state del formulario\r\n    const anunciosContext = useContext(anuncioContext);\r\n    const { mensaje, tags, anuncioseleccionado, actualizarAnuncio, formedit, cerrarFormularioEdit, errorformulario, mostrarError, obtenerTags } = anunciosContext;\r\n\r\n    const alertaContext = useContext(AlertaContext);\r\n    const { alerta, mostrarAlerta } = alertaContext;\r\n\r\n\r\n    // Obtener anuncios cuando carga el componente\r\n    useEffect(() => {\r\n        // si hay un error\r\n        if(mensaje) {\r\n            mostrarAlerta(mensaje.msg, mensaje.categoria);\r\n        }\r\n\r\n        obtenerTags();\r\n        // eslint-disable-next-line\r\n    }, [mensaje]);\r\n\r\n    useEffect(() => {\r\n    \r\n        if (anuncioseleccionado !== null) {\r\n          guardarAnuncio(anuncioseleccionado);\r\n        } else {\r\n          guardarAnuncio({\r\n            nombre: '',\r\n            descripcion:'',\r\n            precio: 0,\r\n            venta: true,\r\n            tags: []\r\n          });\r\n        }\r\n      }, [anuncioseleccionado]);\r\n    \r\n\r\n\r\n    // State para Proyecto\r\n    const [anuncio, guardarAnuncio] = useState({\r\n        nombre: '',\r\n        descripcion:'',\r\n        precio: 0,\r\n        venta: true,\r\n        tags: []\r\n        \r\n    });\r\n\r\n    \r\n\r\n    // Extraer atributos de anuncio\r\n    const { nombre, descripcion, precio } = anuncio;\r\n\r\n\r\n    // Lee los contenidos del input\r\n    const onChangeAnuncio = e => {\r\n        guardarAnuncio({\r\n            ...anuncio,\r\n            [e.target.name] : e.target.value,\r\n        })\r\n    }\r\n\r\n    const onChangeTags = e => {\r\n        if (anuncioseleccionado.tags.find(element => element === e.target.value)){\r\n            guardarAnuncio({\r\n                ...anuncio,\r\n                tags: anuncio.tags.filter(element => element !== e.target.value)\r\n            })\r\n            \r\n            return anuncio;\r\n        }else{\r\n            guardarAnuncio({\r\n                ...anuncio,\r\n                [e.target.name] : [...anuncio.tags, e.target.value]\r\n            })\r\n        }\r\n    }\r\n\r\n    const onClickVenta = e => {\r\n        if (e.target.value !== \"sell\"){\r\n            guardarAnuncio({\r\n                ...anuncio,\r\n                [e.target.name] : false,\r\n            })\r\n        }else{\r\n            guardarAnuncio({\r\n                ...anuncio,\r\n                [e.target.name] : true,\r\n            })\r\n        };        \r\n    }\r\n\r\n    const onChangeVenta = e => {\r\n        guardarAnuncio({\r\n            ...anuncio,\r\n            [e.target.name] : true,\r\n        });\r\n    }\r\n\r\n    // Cuando el usuario envia un anuncio\r\n    const onSubmitAnuncio = async e => {\r\n        e.preventDefault();\r\n        \r\n        // Validar el anuncio\r\n        if(nombre === '') {\r\n            mostrarError();\r\n            return;\r\n        }\r\n\r\n        // agregar al state\r\n        await actualizarAnuncio(anuncio);\r\n        \r\n\r\n        \r\n        // Reiniciar el form\r\n        guardarAnuncio({\r\n            nombre: '',\r\n            descripcion:'',\r\n            precio: 0,\r\n            venta: true,\r\n            tags: []\r\n        })\r\n        \r\n        cerrarFormularioEdit();\r\n    }\r\n\r\n    \r\n\r\n    \r\n\r\n    \r\n\r\n    return ( \r\n        <Fragment>\r\n            \r\n\r\n            { formedit ? \r\n                    (\r\n                        <form\r\n                            className=\"formulario-nuevo-proyecto\"\r\n                            onSubmit={onSubmitAnuncio}\r\n                        >\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"input-text\"\r\n                                placeholder=\"Título del anuncio\"\r\n                                name=\"nombre\"\r\n                                value={nombre}\r\n                                onChange={onChangeAnuncio}\r\n                            />\r\n                            <textarea \r\n                                type=\"text\"\r\n                                className=\"input-text\"\r\n                                placeholder=\"Describe el anuncio\"\r\n                                name=\"descripcion\"\r\n                                value={descripcion}\r\n                                onChange={onChangeAnuncio}\r\n                            />\r\n\r\n                                <input \r\n                                    type=\"text\"\r\n                                    className=\"input-text\"\r\n                                    placeholder=\"Precio\"\r\n                                    name=\"precio\"\r\n                                    value={precio}\r\n                                    onChange={onChangeAnuncio}\r\n                            />\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"buyOrSell\">¿Vendes o compras?</label>\r\n                                <select name=\"venta\" className=\"form-control\" id=\"buyOrSell\" onChange={onChangeVenta} onClick={onClickVenta}>\r\n                                    <option value=\"sell\" >Venta</option>\r\n                                    <option value=\"buy\" >Compra</option>\r\n                                </select>\r\n                            </div>\r\n\r\n                            { alerta   ? ( <div className={`alerta ${alerta.categoria} `}>{alerta.msg}</div>  ) : null  }\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"tagsList\">Selecciona tags</label>\r\n                                <select name=\"tags\" multiple className=\"form-control\" id=\"tagsList\" onChange={onChangeTags}>\r\n                                    {(tags.map(tag => (<option  value={tag.tagName} key={tag.tagName} >{tag.tagName}</option>)))}\r\n                                </select>\r\n                            </div>\r\n           \r\n\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btn btn-primario btn-block\"\r\n                                value=\"Editar Anuncio\"\r\n                            />\r\n\r\n                        </form>\r\n                ) : null }\r\n\r\n            { errorformulario ? <p className=\"mensaje error\">El nombre del Anuncio es obligatorio</p>  : null }\r\n        </Fragment>\r\n     );\r\n}\r\n \r\nexport default FormAnuncio;","import React from 'react';\n\n\n\nconst Anuncio = ({anuncio}) => {\n    const url_img = process.env.REACT_APP_BACKEND_URL;\n    // Obtener el state de anuncios\n\n\n    return ( \n\n       <div className=\"card\">\n        <img className=\"card-img\" src={anuncio.foto ? `${url_img}/images/uploads/${anuncio.foto}`: 'https://bulma.io/images/placeholders/1280x960.png'}  alt={anuncio.nombre}></img>\n        {/* <div className=\"card-img-overlay d-flex justify-content-end\">\n            <a href=\"#\" className=\"card-link text-danger like\">\n            <i className=\"fas fa-heart\"></i>\n            </a>\n        </div> */}\n        <div className=\"card-body\">\n            <h4 className=\"card-title\">{anuncio.nombre}</h4>\n            <h6 className=\"card-subtitle mb-2 text-muted\">{anuncio.venta ? \"Está en venta\" : \"Se busca para comprar\"}</h6>\n            <p className=\"card-text\">{anuncio.descripcion}</p>\n            <div className=\"options d-flex flex-fill\">\n            </div>\n            <div className=\"buy d-flex justify-content-between align-items-center\">\n            <div className=\"price text-success\"><h5 className=\"mt-4\">{anuncio.precio}</h5></div>\n            <div>{anuncio.tags.map(tag => <span className=\"btn btn-danger mt-3\" key={tag}>{tag}</span>)}</div>\n            </div>\n        </div>\n        </div>\n\n\n\n\n\n\n        // <li>\n        //     <p>{anuncio.nombre} </p>\n            \n        //     <p>{anuncio.descripcion}</p>\n        //     <p>{anuncio.precio} </p>\n        //     <p>{anuncio.tags.map(tag => <span key={tag}>{tag}</span>)}</p>\n        //     <p>{anuncio.venta ? \"Está en venta\" : \"Se busca para comprar\"}</p>\n\n        //     <div className=\"container\">\n        //         <img src={anuncio.foto ? `${url_img}/images/uploads/${anuncio.foto}`: 'https://bulma.io/images/placeholders/1280x960.png'} className=\"image-thumbnail rounded float-left w-25\" alt=\"Foto\"></img>\n        //     </div>\n        // </li>\n     );\n}\n \nexport default Anuncio;","import React, { useContext, useEffect } from \"react\";\nimport Anuncio from \"./Anuncio\";\nimport anuncioContext from \"../../context/anuncios/anuncioContext\";\nimport AlertaContext from \"../../context/alertas/alertaContext\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nconst ListadoAnuncios = () => {\n  // Extrar anuncios de state inicial\n  const anunciosContext = useContext(anuncioContext);\n  const {\n    mensaje,\n    anuncios,\n    obtenerAnuncios,\n    eliminarAnuncio,\n    anuncioSelected,\n    mostrarFormularioEdit\n  } = anunciosContext;\n\n  const alertaContext = useContext(AlertaContext);\n  const { alerta, mostrarAlerta } = alertaContext;\n\n  // Obtener anuncios cuando carga el componente\n  useEffect(() => {\n    // si hay un error\n    if (mensaje) {\n      mostrarAlerta(mensaje.msg, mensaje.categoria);\n    }\n\n    obtenerAnuncios();\n    // eslint-disable-next-line\n  }, [mensaje]);\n\n  const seleccionarAnuncio = anuncio => {\n    mostrarFormularioEdit();\n    // Fijar un proyecto actual\n    anuncioSelected(anuncio);\n  };\n\n  // revisar si anuncios tiene contenido\n  if (anuncios.length === 0)\n    return <p>No hay anuncios, comienza creando uno</p>;\n\n  return (\n    <ul className=\"listado-proyectos\">\n      {alerta ? (\n        <div className={`alerta ${alerta.categoria} `}>{alerta.msg}</div>\n      ) : null}\n\n      <TransitionGroup>\n        {anuncios.map(anuncio => (\n          <CSSTransition key={anuncio._id} timeout={200} classNames=\"proyecto\">\n            <li className=\"tarea sombra\">\n              <Anuncio anuncio={anuncio} />\n              <div className=\"acciones\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-primario\"\n                  onClick={() => seleccionarAnuncio(anuncio)}\n                >\n                  Editar\n                </button>\n\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secundario\"\n                  onClick={() => eliminarAnuncio(anuncio._id)}\n                >\n                  Eliminar\n                </button>\n              </div>\n            </li>\n          </CSSTransition>\n        ))}\n      </TransitionGroup>\n    </ul>\n  );\n};\n\nexport default ListadoAnuncios;\n","import React, { useContext, useEffect } from 'react';\nimport Sidebar from '../layout/Sidebar';\nimport Barra from '../layout/Barra';\nimport FormAnuncio from './FormAnuncio';\nimport ListadoAnuncios from '../anuncios/ListadoAnuncios';\nimport AuthContext from '../../context/autenticacion/authContext';\n\nconst Anuncios = () => {\n\n    // Extraer la información de autenticación\n    const authContext = useContext(AuthContext);\n    const { usuarioAutenticado } = authContext;\n\n    useEffect(() => {\n        usuarioAutenticado();\n        // eslint-disable-next-line\n    }, [])\n\n    return ( \n        <div className=\"contenedor-app\">\n            <Sidebar />\n\n            <div className=\"seccion-principal\">\n                <Barra />\n\n                <main>\n                    {/* <FormTarea /> */}\n                    <FormAnuncio />\n\n                    <div className=\"contenedor-tareas\">\n                        <ListadoAnuncios />\n                    </div>\n                </main>\n            </div>\n        </div>\n     );\n}\n \nexport default Anuncios;","import { createContext } from 'react';\r\n\r\nconst busquedaContext = createContext();\r\n\r\nexport default busquedaContext;","import i18n from 'i18next'\r\nimport LanguageDetector from 'i18next-browser-languagedetector'\r\n\r\n// ruta a los archivos de idiomas\r\nimport common_en from './locales/en/translation.json'\r\nimport common_es from './locales/es/translation.json'\r\n\r\ni18n.use(LanguageDetector).init({\r\n  fallbackLng: 'es',\r\n  debug: true,\r\n  interpolation: {\r\n    escapeValue: false, // not needed for react!!\r\n  },\r\n  // react i18next special options (optional)\r\n  react: {\r\n    wait: false,\r\n    bindI18n: 'languageChanged loaded',\r\n    bindStore: 'added removed',\r\n    nsMode: 'default',\r\n  },\r\n  resources: {\r\n    en: {\r\n      translation: common_en,\r\n    },\r\n    es: {\r\n      translation: common_es,\r\n    },\r\n  },\r\n})\r\nexport default i18n","import React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport i18n from \"../../i18n\";\nimport busquedaContext from \"../../context/busqueda/busquedaContext\";\n\nconst BarraLayoutPrincipal = () => {\n  const busquedasContext = useContext(busquedaContext);\n  const {\n    mostrarFormularioBusqueda,\n    cerrarFormularioBusqueda,\n    formulario_busqueda\n  } = busquedasContext;\n  const onClickBuscar = e => {\n    if (formulario_busqueda === false) {\n      mostrarFormularioBusqueda();\n    } else {\n      cerrarFormularioBusqueda();\n    }\n  };\n\n  return (\n    <header className=\"app-header\">\n      <h1 className=\"nombre-usuario\">\n        Walla<span>Clone</span>\n      </h1>\n      <nav className=\"nav-principal\">\n        <a href=\"/?lng=en\">English</a>\n        <a href=\"/?lng=es\">Español</a>\n        <Link to={\"/login\"} className=\"enlace-cuenta\">\n          {i18n.t(\"login\")}\n        </Link>\n        <button onClick={onClickBuscar}>\n          {formulario_busqueda ? i18n.t(\"closebtn\") : i18n.t(\"searchbtn\")}\n        </button>\n      </nav>\n    </header>\n  );\n};\n\nexport default BarraLayoutPrincipal;\n","import React, { Fragment, useState, useContext, useEffect } from 'react';\r\nimport anuncioContext from '../../context/anuncios/anuncioContext';\r\nimport busquedaContext from '../../context/busqueda/busquedaContext';\r\nimport AlertaContext from '../../context/alertas/alertaContext';\r\n\r\nconst FormBusqueda = () => {\r\n\r\n    // Obtener el state del formulario\r\n    const anunciosContext = useContext(anuncioContext);\r\n    const {  tags,  obtenerTags, errorformulario, mensaje } = anunciosContext;\r\n\r\n    const busquedasContext = useContext(busquedaContext);\r\n    const {  obtenerBusqueda, formulario_busqueda} = busquedasContext;\r\n\r\n    const alertaContext = useContext(AlertaContext);\r\n    const { alerta, mostrarAlerta } = alertaContext;\r\n\r\n\r\n    // Obtener anuncios cuando carga el componente\r\n    useEffect(() => {\r\n        // si hay un error\r\n        if(mensaje) {\r\n            mostrarAlerta(mensaje.msg, mensaje.categoria);\r\n        }\r\n\r\n        obtenerTags();\r\n        // eslint-disable-next-line\r\n    }, [mensaje]);\r\n\r\n    \r\n\r\n\r\n    // State para Proyecto\r\n    \r\n    const [busqueda, guardarBusqueda] = useState({\r\n        nombre: '',\r\n        descripcion:'',\r\n        precio: '',\r\n        venta: true,\r\n        tagsB: []\r\n        \r\n    });\r\n\r\n    \r\n\r\n    // Extraer atributos de proyecto\r\n    const { nombre, descripcion, precio, tagsB } = busqueda;\r\n\r\n\r\n    // Lee los contenidos del input\r\n    const onChangeAnuncio = e => {\r\n        console.log(busqueda);\r\n        guardarBusqueda({\r\n            ...busqueda,\r\n            [e.target.name] : e.target.value,\r\n        })\r\n    }\r\n\r\n    const onChangeTags = e => {\r\n        console.log(busqueda);\r\n        if (tagsB.find(element => element === e.target.value)){\r\n            guardarBusqueda({\r\n                ...busqueda,\r\n                tagsB: tagsB.filter(element => element !== e.target.value)\r\n            })\r\n        }else{\r\n            guardarBusqueda({\r\n                ...busqueda,\r\n                [e.target.name] : [...busqueda.tagsB, e.target.value]\r\n            })\r\n        }\r\n    }\r\n\r\n    const onChangeVenta = e => {\r\n        console.log(e.target.value);\r\n        if (e.target.value !== \"sell\"){\r\n            guardarBusqueda({\r\n                ...busqueda,\r\n                [e.target.name] : false,\r\n            })\r\n        }else{\r\n            guardarBusqueda({\r\n                ...busqueda,\r\n                [e.target.name] : true,\r\n            })\r\n        };        \r\n    }\r\n\r\n    const onClickVenta = e => {\r\n        guardarBusqueda({\r\n            ...busqueda,\r\n            [e.target.name] : true,\r\n        });\r\n    }\r\n\r\n    // Cuando el usuario envia un anuncio\r\n    const onSubmitAnuncio = async e => {\r\n        e.preventDefault();\r\n\r\n        \r\n        obtenerBusqueda(\r\n            `nombre=${nombre}&&descripcion=${descripcion}&&precio=${precio}&&tags=${tagsB}`\r\n        );\r\n\r\n        \r\n        // Reiniciar el form\r\n        guardarBusqueda({\r\n            nombre: '',\r\n            descripcion:'',\r\n            precio: '',\r\n            venta: true,\r\n            tagsB: []\r\n        })\r\n        \r\n    }\r\n\r\n    \r\n\r\n    \r\n\r\n    \r\n\r\n    return ( \r\n        <Fragment>\r\n            \r\n\r\n            { formulario_busqueda ? \r\n                    (\r\n                        <form\r\n                            className=\"formulario-nuevo-proyecto\"\r\n                            onSubmit={onSubmitAnuncio}\r\n                        >\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"input-text\"\r\n                                placeholder=\"Título del anuncio\"\r\n                                name=\"nombre\"\r\n                                value={nombre}\r\n                                onChange={onChangeAnuncio}\r\n                            />\r\n                            <textarea \r\n                                type=\"text\"\r\n                                className=\"input-text\"\r\n                                placeholder=\"Describe el anuncio\"\r\n                                name=\"descripcion\"\r\n                                value={descripcion}\r\n                                onChange={onChangeAnuncio}\r\n                            />\r\n\r\n                                <input \r\n                                    type=\"text\"\r\n                                    className=\"input-text\"\r\n                                    placeholder=\"Precio\"\r\n                                    name=\"precio\"\r\n                                    value={precio}\r\n                                    onChange={onChangeAnuncio}\r\n                            />\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"buyOrSell\">¿Vendes o compras?</label>\r\n                                <select name=\"venta\" className=\"form-control\" id=\"buyOrSell\" onChange={onChangeVenta} onClick={onClickVenta}>\r\n                                    <option value=\"sell\" >Venta</option>\r\n                                    <option value=\"buy\" >Compra</option>\r\n                                </select>\r\n                            </div>\r\n\r\n                            { alerta   ? ( <div className={`alerta ${alerta.categoria} `}>{alerta.msg}</div>  ) : null  }\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"tagsList\">Selecciona tags</label>\r\n                                <select name=\"tagsB\" className=\"form-control\" id=\"tagsList\" onChange={onChangeTags}>\r\n                                    <option>Escoge una o varias opciones</option>\r\n                                    {(tags.map(tag => (<option  value={tag.tagName} key={tag.tagName} >{tag.tagName}</option>)))}\r\n                                </select>\r\n                            </div>\r\n           \r\n\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btn btn-primary mb-2\"\r\n                                value=\"Buscar\"\r\n                            />\r\n\r\n                        </form>\r\n                ) : null }\r\n\r\n            { errorformulario ? <p className=\"mensaje error\">El nombre del Anuncio es obligatorio</p>  : null }\r\n        </Fragment>\r\n     );\r\n}\r\n \r\nexport default FormBusqueda;","import React, { useContext, useEffect } from \"react\";\nimport Anuncio from \"./Anuncio\";\nimport anuncioContext from \"../../context/anuncios/anuncioContext\";\nimport busquedaContext from \"../../context/busqueda/busquedaContext\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport BarraLayoutPrincipal from \"../layout/BarraLayoutPrincipal\";\nimport FormBusqueda from \"../../components/anuncios/FormBusqueda\";\n\nconst ListadoAnuncios = () => {\n  // Extrar anuncios de state inicial\n  const anunciosContext = useContext(anuncioContext);\n  const { mensaje, anuncios, obtenerAnunciosAll } = anunciosContext;\n\n  const busquedasContext = useContext(busquedaContext);\n  const { anunciosbuscados, formulario_busqueda } = busquedasContext;\n\n  // Obtener anuncios cuando carga el componente\n  useEffect(() => {\n    obtenerAnunciosAll();\n    // eslint-disable-next-line\n  }, [mensaje]);\n\n  return (\n    <main className=\"contenedor-proyecto\">\n      <BarraLayoutPrincipal />\n      <FormBusqueda />\n\n      <ul className=\"listado-tareas\">\n        {formulario_busqueda ? (\n          anunciosbuscados.length === 0 ? (\n            <li className=\"tarea\">\n              <p>No se han encontrado anuncios</p>\n            </li>\n          ) : (\n            <TransitionGroup>\n              {anunciosbuscados.map(anuncio => (\n                <CSSTransition\n                  key={anuncio._id}\n                  timeout={200}\n                  className=\"proyecto\"\n                >\n                  <li className=\"tarea sombra\">\n                    <Anuncio anuncio={anuncio} />\n                  </li>\n                </CSSTransition>\n              ))}\n            </TransitionGroup>\n          )\n        ) : anuncios.length === 0 ? (\n          <li className=\"tarea\">\n            <p>No hay Anuncios</p>\n          </li>\n        ) : (\n          <TransitionGroup>\n            {anuncios.map(anuncio => (\n              <CSSTransition\n                key={anuncio._id}\n                timeout={200}\n                className=\"proyecto\"\n              >\n                <li className=\"tarea sombra\">\n                  <Anuncio anuncio={anuncio} />\n                </li>\n              </CSSTransition>\n            ))}\n          </TransitionGroup>\n        )}\n      </ul>\n    </main>\n  );\n};\n\nexport default ListadoAnuncios;\n","import { \n    FORMULARIO_ANUNCIO,\n    FORMULARIO_EDICION,\n    FORMULARIO_CERRAR_EDICION,\n    OBTENER_ANUNCIOS,\n    OBTENER_TAGS,\n    AGREGAR_ANUNCIO,\n    ANUNCIO_ERROR,\n    VALIDAR_FORMULARIO,\n    ANUNCIO_ACTUAL,\n    ACTUALIZAR_ANUNCIO,\n    ELIMINAR_ANUNCIO,\n    ANUNCIO_SELECTED\n} from '../../types';\n\n\nexport default (state, action) => {\n    switch(action.type) {\n        case FORMULARIO_ANUNCIO:\n            return {\n                ...state,\n                formulario: true\n            }\n        case FORMULARIO_EDICION:\n            return {\n                ...state,\n                formedit: true\n            }\n        case FORMULARIO_CERRAR_EDICION:\n            return {\n            ...state,\n            formedit: false\n            }\n        case OBTENER_ANUNCIOS:\n            return {\n                ...state,\n                anuncios: action.payload\n            }\n        case OBTENER_TAGS:\n            return {\n                 ...state,\n                 tags: action.payload\n            }\n        case AGREGAR_ANUNCIO:\n            return {\n                ...state,\n                anuncios: [...state.anuncios, action.payload],\n                formulario: false,\n                errorformulario: false\n            }\n        case VALIDAR_FORMULARIO:\n            return {\n                ...state, \n                errorformulario: true\n            }\n        case ANUNCIO_ACTUAL:\n            return {\n                ...state,\n                anuncio: state.anuncios.filter(anuncio => anuncio._id === action.payload )\n            }\n        case ANUNCIO_SELECTED:\n            return {\n                ...state,\n                anuncioseleccionado: action.payload,\n                formanuncio: true,\n            }\n        case ACTUALIZAR_ANUNCIO:\n            return {\n                ...state,\n                anuncios: state.anuncios.map(anuncio => anuncio._id === action.payload._id ? action.payload : anuncio)\n            }\n        case ELIMINAR_ANUNCIO:\n            return {\n                ...state,\n                anuncios: state.anuncios.filter(anuncio => anuncio._id !== action.payload ),\n                anuncio: null\n            }\n        case ANUNCIO_ERROR:\n            return {\n                ...state,\n                mensaje: action.payload\n            }\n        default:\n            return state;\n    }\n}","export const FORMULARIO_ANUNCIO = 'FORMULARIO_ANUNCIO';\nexport const FORMULARIO_EDICION ='FORMULARIO_EDICION';\nexport const FORMULARIO_CERRAR_EDICION ='FORMULARIO_CERRAR_EDICION';\nexport const OBTENER_ANUNCIOS = 'OBTENER_ANUNCIOS';\nexport const OBTENER_TAGS ='OBTENER_TAGS';\nexport const AGREGAR_ANUNCIO = 'AGREGAR_ANUNCIO';\nexport const VALIDAR_FORMULARIO = 'VALIDAR_FORMULARIO';\nexport const ANUNCIO_ACTUAL = 'ANUNCIO_ACTUAL';\nexport const ELIMINAR_ANUNCIO = 'ELIMINAR_ANUNCIO';\nexport const ANUNCIO_ERROR = 'ANUNCIO_ERROR';\nexport const ANUNCIO_SELECTED = 'ANUNCIO_SELECTED';\nexport const ACTUALIZAR_ANUNCIO = 'ACTUALIZAR_ANUNCIO';\n\nexport const MOSTRAR_ALERTA = 'MOSTRAR_ALERTA';\nexport const OCULTAR_ALERTA = 'OCULTAR_ALERTA';\n\nexport const REGISTRO_EXITOSO = 'REGISTRO_EXITOSO';\nexport const REGISTRO_ERROR = 'REGISTRO_ERROR';\nexport const OBTENER_USUARIO = 'OBTENER_USUARIO';\nexport const LOGIN_EXITOSO = 'LOGIN_EXITOSO';\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\nexport const CERRAR_SESION = 'CERRAR_SESION';\nexport const RESETEAR_PASS = 'RESETEAR_PASS';\nexport const RESETEO_SOLICITADO = 'RESETEO_SOLICITADO';\nexport const NEW_PASSWORD = 'NEW_PASSWORD';\n\nexport const FORMULARIO_BUSQUEDA = 'FORMULARIO_BUSQUEDA';\nexport const URL_SEARCH = 'URL_SEARCH';\nexport const ANUNCIOS_BUSQUEDA = 'ANUNCIOS_BUSQUEDA';\nexport const BUSQUEDA_ERROR = 'BUSQUEDA_ERROR';","import axios from 'axios';\n\nconst clienteAxios = axios.create({\n    baseURL : process.env.REACT_APP_BACKEND_URL\n});\n\nexport default clienteAxios;","import React, { useReducer } from 'react';\n\nimport anuncioContext from './anuncioContext';\nimport anuncioReducer from './anuncioReducer';\nimport { \n    FORMULARIO_ANUNCIO, \n    FORMULARIO_EDICION,\n    FORMULARIO_CERRAR_EDICION,\n    OBTENER_ANUNCIOS,\n    OBTENER_TAGS,\n    AGREGAR_ANUNCIO,\n    ANUNCIO_ERROR,\n    VALIDAR_FORMULARIO,\n    ANUNCIO_ACTUAL,\n    ELIMINAR_ANUNCIO,\n    ANUNCIO_SELECTED,\n    ACTUALIZAR_ANUNCIO\n} from '../../types';\n\nimport clienteAxios from '../../config/axios';\n\n\nconst AnuncioState = props => {\n\n    const initialState = {\n        anuncios : [],\n        tags : [],\n        formulario : false,\n        formedit : false,\n        errorformulario: false,\n        anuncio: null, \n        mensaje: null,\n        anuncioseleccionado: null,\n        formData: null\n\n    }\n\n    // Dispatch para ejecutar las acciones\n    const [state, dispatch] = useReducer(anuncioReducer, initialState)\n\n    // Serie de funciones para el CRUD\n    const mostrarFormulario = () => {\n        dispatch({\n            type: FORMULARIO_ANUNCIO\n        })\n    }\n\n    const mostrarFormularioEdit = () => {\n        dispatch({\n            type: FORMULARIO_EDICION\n        })\n    }\n\n    const cerrarFormularioEdit = () => {\n        dispatch({\n            type: FORMULARIO_CERRAR_EDICION\n        })\n    }\n\n    // Obtener todos los anuncios sin estar autenticado\n    const obtenerAnunciosAll = async () => {\n        try {\n            const resultado = await clienteAxios.get('/api/anunciosall');\n\n            dispatch({\n                type: OBTENER_ANUNCIOS,\n                payload: resultado.data.anuncios\n            })\n        } catch (error) {\n            const alerta = {\n                msg: 'Hubo un error',\n                categoria: 'alerta-error'\n            }\n            \n            dispatch({\n                type: ANUNCIO_ERROR,\n                payload: alerta\n            })\n        }\n    }\n\n    // Obtener los anuncios\n    const obtenerAnuncios = async () => {\n        try {\n            const resultado = await clienteAxios.get('/api/anuncios');\n\n            dispatch({\n                type: OBTENER_ANUNCIOS,\n                payload: resultado.data.anuncios\n            })\n        } catch (error) {\n            const alerta = {\n                msg: 'Hubo un error',\n                categoria: 'alerta-error'\n            }\n            \n            dispatch({\n                type: ANUNCIO_ERROR,\n                payload: alerta\n            })\n        }\n    }\n\n    const obtenerTags = async () => {\n        try {\n            const resultado = await clienteAxios.get('/api/tags');\n\n            dispatch({\n                type: OBTENER_TAGS,\n                payload: resultado.data.tags\n            })\n\n        } catch (error) {\n            const alerta = {\n                msg: 'Hubo un error con los tags',\n                categoria: 'alerta-error'\n            }\n            dispatch({\n                type: ANUNCIO_ERROR,\n                payload: alerta\n            })\n        }\n    }\n\n   \n\n    // Agregar nuevo anuncio\n    const agregarAnuncio = async (fd) => {\n\n        try {\n            \n            const resultado = await clienteAxios.post('/api/anuncios', fd, {\n                headers:{\n                    'Content-Type': 'multipart/form-data'\n                }\n            });\n            // Insertar el anuncio en el state\n            dispatch({\n                type: AGREGAR_ANUNCIO,\n                payload: resultado.data\n            })\n        } catch (error) {\n            const alerta = {\n                msg: 'Hubo un error',\n                categoria: 'alerta-error'\n            }\n            \n            dispatch({\n                type: ANUNCIO_ERROR,\n                payload: alerta\n            })\n        }\n    }\n\n    // Valida el formulario por errores\n    const mostrarError = () => {\n        dispatch({\n            type: VALIDAR_FORMULARIO\n        })\n    } \n\n    // Selecciona el Anuncio que el usuario dio click\n    const anuncioActual = anuncioId => {\n        dispatch({\n            type: ANUNCIO_ACTUAL,\n            payload: anuncioId\n        })\n    }\n\n    const anuncioSelected = anuncio => {\n        dispatch({\n            type: ANUNCIO_SELECTED,\n            payload: anuncio\n        })\n    }\n\n    // Edita o modifica un anuncio\n    const actualizarAnuncio = async (fd) => {\n\n        try {\n            const resultado = await clienteAxios.put(`/api/anuncios/${fd._id}`, fd);\n            \n            dispatch({\n                type: ACTUALIZAR_ANUNCIO,\n                payload: resultado.data.anuncio\n            })\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    // Elimina un proyecto\n    const eliminarAnuncio = async anuncioId => {\n        try {\n            await clienteAxios.delete(`/api/anuncios/${anuncioId}`);\n            dispatch({\n                type: ELIMINAR_ANUNCIO,\n                payload: anuncioId\n            })\n        } catch (error) {\n            const alerta = {\n                msg: 'Hubo un error',\n                categoria: 'alerta-error'\n            }\n            \n            dispatch({\n                type: ANUNCIO_ERROR,\n                payload: alerta\n            })\n        }\n    }\n\n\n    return (\n        <anuncioContext.Provider\n            value={{\n                anuncios: state.anuncios,\n                tags: state.tags,\n                formulario: state.formulario,\n                formedit: state.formedit,\n                errorformulario: state.errorformulario,\n                anuncio: state.anuncio,\n                mensaje: state.mensaje,\n                anuncioseleccionado: state.anuncioseleccionado,\n                mostrarFormulario,\n                mostrarFormularioEdit,\n                cerrarFormularioEdit,\n                obtenerAnunciosAll,\n                obtenerAnuncios,\n                obtenerTags,\n                agregarAnuncio,\n                mostrarError,\n                anuncioActual,\n                anuncioSelected,\n                actualizarAnuncio,\n                eliminarAnuncio\n            }}\n        >\n            {props.children}\n        </anuncioContext.Provider>\n        \n    )\n}\n\nexport default AnuncioState;","import { MOSTRAR_ALERTA, OCULTAR_ALERTA} from '../../types';\n\nexport default (state, action) => {\n    switch(action.type) {\n        case MOSTRAR_ALERTA:\n            return {\n                alerta: action.payload\n            }\n        case OCULTAR_ALERTA:\n            return {\n                alerta: null\n            }\n        default:\n            return state;\n    }\n}","import React, { useReducer } from 'react';\nimport alertaReducer from './alertaReducer';\nimport alertaContext from './alertaContext';\n\nimport { MOSTRAR_ALERTA, OCULTAR_ALERTA} from '../../types';\n\nconst AlertaState = props => {\n    const initialState = {\n        alerta: null\n    }\n\n    const [ state, dispatch ] = useReducer(alertaReducer, initialState);\n\n    // Funciones\n    const mostrarAlerta = (msg, categoria) => {\n        dispatch({\n            type:  MOSTRAR_ALERTA,\n            payload: {\n                msg, \n                categoria\n            }\n        });\n\n        // Después de 5 segundos limpiar la alerta\n        setTimeout(() => {\n            dispatch({\n                type: OCULTAR_ALERTA\n            })\n        }, 5000);\n    }\n\n\n    return (\n        <alertaContext.Provider\n            value={{\n                alerta: state.alerta,\n                mostrarAlerta\n            }}\n        > \n            {props.children}\n        </alertaContext.Provider>\n    )\n}\n\nexport default AlertaState;","import { \n    REGISTRO_EXITOSO,\n    REGISTRO_ERROR,\n    OBTENER_USUARIO,\n    LOGIN_EXITOSO,\n    LOGIN_ERROR,\n    CERRAR_SESION,\n    RESETEAR_PASS,\n    RESETEO_SOLICITADO,\n    NEW_PASSWORD\n} from '../../types';\n\nexport default (state, action) => {\n    switch(action.type) {\n        case REGISTRO_EXITOSO:\n        case LOGIN_EXITOSO:\n            localStorage.setItem('token', action.payload.token);\n            return {\n                ...state,\n                autenticado: true,\n                mensaje: null,\n                cargando: false\n            }\n        case OBTENER_USUARIO: \n            return {\n                ...state,\n                autenticado: true,\n                usuario: action.payload, \n                cargando: false\n            }\n        case CERRAR_SESION:\n        case LOGIN_ERROR:\n        case REGISTRO_ERROR:\n            localStorage.removeItem('token');\n            return {\n                ...state,\n                token: null,\n                usuario: null,\n                autenticado: null,\n                mensaje: action.payload, \n                cargando: false\n            }\n        case RESETEAR_PASS:\n            return{\n                ...state,\n                emailsended: true,\n                mensaje: action.payload,\n            }\n        case RESETEO_SOLICITADO:\n            return{\n                ...state,\n                emailsended: null\n            }\n        case NEW_PASSWORD:\n            return{\n                ...state,\n                resetpass: true\n            }\n        \n        default:\n            return state;\n    }\n}","import clienteAxios from './axios';\n\nconst tokenAuth = token => {\n    if(token) {\n        clienteAxios.defaults.headers.common['x-auth-token'] = token;\n    } else {\n        delete clienteAxios.defaults.headers.common['x-auth-token'];\n    }\n}\n\nexport default tokenAuth;","import React, { useReducer } from 'react';\nimport AuthContext from './authContext';\nimport AuthReducer from './authReducer';\n\nimport clienteAxios from '../../config/axios';\nimport tokenAuth from '../../config/token';\n\nimport { \n    REGISTRO_EXITOSO,\n    REGISTRO_ERROR,\n    OBTENER_USUARIO,\n    LOGIN_EXITOSO,\n    LOGIN_ERROR,\n    CERRAR_SESION,\n    RESETEAR_PASS,\n    RESETEO_SOLICITADO,\n    NEW_PASSWORD\n} from '../../types';\n\nconst AuthState = props => {\n    const initialState = {\n        token: localStorage.getItem('token'),\n        autenticado: null,\n        usuario: null, \n        mensaje: null, \n        cargando: true,\n        emailsended: null,\n        resetpass: null\n    }\n\n    const [ state, dispatch ] = useReducer(AuthReducer, initialState);\n\n    const registrarUsuario = async datos => {\n        try {\n\n            const respuesta = await clienteAxios.post('/api/usuarios', datos);\n\n            dispatch({\n                type: REGISTRO_EXITOSO,\n                payload: respuesta.data\n            });\n\n            // Obtener el usuario\n            usuarioAutenticado();\n        } catch (error) {\n            const alerta = {\n                msg: error.response.data.msg,\n                categoria: 'alerta-error'\n            }\n\n            dispatch({\n                type: REGISTRO_ERROR,\n                payload: alerta\n            })\n        }\n    }\n\n    // Retorna el usuario autenticado\n    const usuarioAutenticado = async () => {\n        const token = localStorage.getItem('token');\n        if(token) {\n            tokenAuth(token);\n        }\n\n        try {\n            const respuesta = await clienteAxios.get('/api/auth');\n            \n            dispatch({\n                type: OBTENER_USUARIO,\n                payload: respuesta.data.usuario\n            });\n\n        } catch (error) {\n            console.log(error.response);\n            dispatch({\n                type: LOGIN_ERROR\n            })\n        }\n    }\n\n    // Cuando el usuario inicia sesión\n    const iniciarSesion = async datos => {\n        try {\n            const respuesta = await clienteAxios.post('/api/auth', datos);\n            \n            dispatch({\n                type: LOGIN_EXITOSO,\n                payload: respuesta.data\n            });\n\n            // Obtener el usuario\n            usuarioAutenticado();\n        } catch (error) {\n            console.log(error.response.data.msg);\n            const alerta = {\n                msg: error.response.data.msg,\n                categoria: 'alerta-error'\n            }\n\n            dispatch({\n                type: LOGIN_ERROR,\n                payload: alerta\n            })\n        }\n    }\n\n    const resetearPass = async datos => {\n        try {\n            const respuesta = await clienteAxios.post('/api/reset', datos);\n            \n            dispatch({\n                type: RESETEAR_PASS,\n                payload: respuesta.data\n            });\n\n            // Obtener el usuario\n            // usuarioAutenticado();\n        } catch (error) {\n            console.log(error.response.data.msg);\n            const alerta = {\n                msg: error.response.data.msg,\n                categoria: 'alerta-error'\n            }\n\n            dispatch({\n                type: LOGIN_ERROR,\n                payload: alerta\n            })\n        }\n    }\n\n    const solicitudReset = () => {\n        dispatch({\n            type: RESETEO_SOLICITADO,\n        })\n    }\n\n    const newPassword = async (token, password) => {\n        \n        // const respuesta1 = await clienteAxios.get('/api/reset');\n        const respuesta = await clienteAxios.post('/api/newpassword', token, password);\n        \n        \n        if(respuesta.data === 'ok'){\n            dispatch({\n                type: NEW_PASSWORD\n            })\n        }\n        \n        \n    }\n\n    // Cierra la sesión del usuario\n    const cerrarSesion = () => {\n        dispatch({\n            type: CERRAR_SESION\n        })\n    }\n\n    return(\n        <AuthContext.Provider\n            value={{\n                token: state.token,\n                autenticado: state.autenticado,\n                usuario: state.usuario,\n                mensaje: state.mensaje,\n                cargando: state.cargando,\n                emailsended: state.emailsended,\n                resetpass: state.resetpass,\n                registrarUsuario,\n                iniciarSesion,\n                usuarioAutenticado,\n                resetearPass,\n                solicitudReset,\n                newPassword,\n                cerrarSesion\n            }}\n        >{props.children}\n\n        </AuthContext.Provider>\n    )\n}\nexport default AuthState;\n","import React, { useContext, useEffect } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport AuthContext from '../../context/autenticacion/authContext';\n\nconst RutaPrivada = ({ component: Component, ...props  }) => {\n\n    const authContext = useContext(AuthContext);\n    const { autenticado, cargando, usuarioAutenticado } = authContext;\n\n    useEffect(() => {\n        usuarioAutenticado();\n        // eslint-disable-next-line\n    }, []);\n\n    return ( \n        <Route { ...props } render={ props => !autenticado && !cargando ?  (\n            <Redirect to=\"/\" />\n        )  : (\n            <Component {...props} />\n        ) } />\n\n     );\n}\n \nexport default RutaPrivada;","import {\r\n    FORMULARIO_BUSQUEDA,\r\n    URL_SEARCH,\r\n    ANUNCIOS_BUSQUEDA,\r\n    BUSQUEDA_ERROR,\r\n} from '../../types';\r\n\r\nexport default (state, action) => {\r\n    switch (action.type) {\r\n        case FORMULARIO_BUSQUEDA:\r\n            return{\r\n                ...state,\r\n                formulario_busqueda: action.payload\r\n            }\r\n        case URL_SEARCH:\r\n            return{\r\n                ...state,\r\n                url_search: action.payload\r\n            }\r\n        case ANUNCIOS_BUSQUEDA:\r\n            return{\r\n                ...state,\r\n                anunciosbuscados: action.payload\r\n            }\r\n        case BUSQUEDA_ERROR:\r\n               return {\r\n                   ...state,\r\n                   mensaje: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import React, { useReducer } from \"react\";\r\n\r\nimport busquedaContext from \"./busquedaContext\";\r\nimport busquedaReducer from \"./busquedaReducer\";\r\nimport {\r\n  FORMULARIO_BUSQUEDA,\r\n  ANUNCIOS_BUSQUEDA,\r\n  BUSQUEDA_ERROR\r\n} from \"../../types\";\r\n\r\nimport clienteAxios from \"../../config/axios\";\r\n\r\nconst BusquedaState = props => {\r\n  const initialState = {\r\n    formulario_busqueda: false,\r\n    anunciosbuscados: [],\r\n    urlsearch: \"\",\r\n    tags: []\r\n  };\r\n\r\n  // Dispatch para ejecutar las acciones\r\n  const [state, dispatch] = useReducer(busquedaReducer, initialState);\r\n\r\n  const mostrarFormularioBusqueda = () => {\r\n    dispatch({\r\n      type: FORMULARIO_BUSQUEDA,\r\n      payload: true\r\n    });\r\n  };\r\n\r\n  const cerrarFormularioBusqueda = () => {\r\n    dispatch({\r\n      type: FORMULARIO_BUSQUEDA,\r\n      payload: false\r\n    });\r\n  };\r\n\r\n  const obtenerBusqueda = async urlsearch => {\r\n    try {\r\n      const endPoint = `/api/anunciosall/?${urlsearch}`;\r\n      const resultado = await clienteAxios.get(endPoint);\r\n\r\n      dispatch({\r\n        type: ANUNCIOS_BUSQUEDA,\r\n        payload: resultado.data.anuncios\r\n      });\r\n    } catch (error) {\r\n      const alerta = {\r\n        msg: \"Hubo un error\",\r\n        categoria: \"alerta-error\"\r\n      };\r\n\r\n      dispatch({\r\n        type: BUSQUEDA_ERROR,\r\n        payload: alerta\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <busquedaContext.Provider\r\n      value={{\r\n        formulario_busqueda: state.formulario_busqueda,\r\n        anunciosbuscados: state.anunciosbuscados,\r\n        urlsearch: state.urlsearch,\r\n        tags: state.tags,\r\n        mostrarFormularioBusqueda,\r\n        cerrarFormularioBusqueda,\r\n        obtenerBusqueda\r\n      }}\r\n    >\r\n      {props.children}\r\n    </busquedaContext.Provider>\r\n  );\r\n};\r\n\r\nexport default BusquedaState;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Login from \"./components/auth/Login\";\nimport NuevaCuenta from \"./components/auth/NuevaCuenta\";\nimport ResetPass from \"./components/auth/ResetPass\";\nimport PassReseted from \"./components/auth/PassReseted\";\nimport Anuncios from \"./components/anuncios/Anuncios\";\nimport ListadoAnunciosAll from \"./components/anuncios/ListadoAnunciosAll\";\n\nimport AnuncioState from \"./context/anuncios/anuncioState\";\nimport AlertaState from \"./context/alertas/alertaState\";\nimport AuthState from \"./context/autenticacion/authState\";\nimport tokenAuth from \"./config/token\";\nimport RutaPrivada from \"./components/rutas/RutaPrivada\";\nimport BusquedaState from \"./context/busqueda/busquedaState\";\n\n// Revisar si tenemos un token\nconst token = localStorage.getItem(\"token\");\nif (token) {\n  tokenAuth(token);\n}\n\nfunction App() {\n  return (\n    <AnuncioState>\n        <AlertaState>\n          <AuthState>\n            <BusquedaState>\n              <Router>\n                <Switch>\n                  <Route exact path=\"/\" component={ListadoAnunciosAll} />\n                  <Route exact path=\"/login\" component={Login} />\n                  <Route exact path=\"/nueva-cuenta\" component={NuevaCuenta} />\n                  <Route exact path=\"/reset-pass\" component={ResetPass} />\n                  <Route exact path=\"/newpassword/:token\" component={PassReseted} />\n                  <RutaPrivada exact path=\"/anuncios\" component={Anuncios} />\n                </Switch>\n              </Router>\n            </BusquedaState>\n          </AuthState>\n        </AlertaState>\n    </AnuncioState>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}